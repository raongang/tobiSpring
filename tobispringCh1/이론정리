스프링
 - 자바 엔터프라이즈 개발을 편하게 해주는 오픈소스 경량급 애플리케이션 프레임워크
 - 핵심기술 : DI , IoC, AOP, PSA  

POJO ( Plain Old Java Object ) 의 조건
 1. 특정기술규약(constract)에 종속되지 않는다.
 2. 특정 환경에 종속되지 않는다.
   - 예) EJB3 빈의 의존 오브젝트 정보는 JNDI를 통해 가져와야 했음.
 3. 객체지향적인 원리에 충실.

DI 
 - 유연한 확장이 가능하게 하기 위함
 - 개방폐쇄 원칙(OCP)라는 객체지향설계 원칙사용

A----->B
class A{
  interface B 
}

A는 인터페이스 B에 의존한다.
인터페이스 B가 변한다면 A는 영향을 받는다.

1. bean 
 - 스프링이 직접 제어권을 가지고 직접 만들고 관계를 부여하는 오브젝트
 - 스프링 컨테이너가 생성과 관계설정, 사용등을 제어해주는 제어의 역전이 적용된 오브젝트
 
 2. 빈팩토리
 - 스프링에서 빈의 생성과 관계 설정 같은 제어를 담당하는 IoC 오브젝트
 - 이를 조금 더 확자한 애플리케이션 컨텍스트(application context)를 주로 사용.
 
 3. application context 
  - 싱글톤을 저장하고 관리하는 싱글톤 레지스트리이기도 함.
  - 스프링은 기본적으로 별다른 설정을 하지 않으면 내부에서 생성하는 빈 오브젝트를
    모두 싱글톤으로 생성함.
    
 3-1. 싱글톤 레지스트리
   - 자바의 기본적인 싱글톤 패턴의 구현방식은 여러가지 단점이 있으므로, 직접 싱글톤 형태의
   오브젝트를 만들고, 관리한다. 
  
4. servlet
 - 대부분 멀티 쓰레드 환경에서 싱글톤으로 동작
 - 스프링은 IoC 컨테이너 뿐만 아니라, 고전적인 싱글톤 패턴을 대신해서 싱글톤을 만들고 관려해준다.  
 
5. 스프링 빈의 스코프
 - 스프링 빈의 기본 스코프는 싱글톤이다.
 - 싱글톤 스코프는 컨테이너 내에 한개의 오브젝트만 만들어져서, 강제로 제거하지 않는 한 스프링 컨테이너가 존재하는 동안 계속 유지된다.
 
 6. 메소드를 이용한 DI 주입방법
  6-1. 수정자 메소드를 이용한 주입 ( setter ) 
  6-2. 일반 메소드를 이용한 주입 
  
  
  7. Spring DI
     - 관심, 책임, 성격이 다른 코드를 깔끔하게 분리하는거.