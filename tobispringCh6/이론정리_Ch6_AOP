
Chapter06 AOP

1. 고립된 단위테스트
   1-1. Stub
     - 상태 검증에 쓰는 객체.
     - 로직 없이, 원하는 값(상태)을 반환한다. 메소드의 행동을 미리 정해두어,
      -이 객체는 무조건 이 값을 반환한다고 가정한다.
      
   1-2. Mock
     -  행위 검증에 쓰는 객체
     - 실제 객체의 행동을 따라하는 가짜 객체.
     - 대개 다른 객체의 행위를 테스트 하기 위해서 mock object를 만들게 된다.
     - 이를 행위 검증이라고 한다. 행위의 수행 여부를 판단한다고 보면 된다.

   1-3. Mokito
     - JUnit 위에서 Mocking 과 Verification을 도와주는 프레임워크이다.

2. proxy
   일반적인 의미 : 클라이언트와 사용 대상 사이에 대리 역할을 맡은 오브젝트를 두는 방법을 총칭
   spring  의미 
     - 타킷(target) 에 대한 접근방법을 제어 할려는 목적.
     - 타켓의 기능을 확장하거나 추가하지 않음.
     - 클라이언트가 타켓에 접근하는 방식을 변경해줌.
     
   2-1. 프록시
    - 자신이 클라이언트가 사용하려고 하는 실제 대상인 것처럼 위장해서 클라이언트의 요청을 받아주는 것. 다른 용어로 대리자라고도https://www.sedaily.com/NewsView/1YZ33475FL 함.
   2-2. 타켓(target) or 실체(real subject) 
     - 프록시를 통해 최종적으로 요청을 위임받아 처리하는 실제 오브젝트
   
   
   2-3. 자바 reflect
     - mokito 이전에는 stub과 mock object를 일일이 만들어줘야 했음.
     - 프록시도 이와 같이 interface를 통해 위임하는 경우와 클래스로 위임하는 경우가 있는데 이럴 경우 매번 인터페이스를 만들고 위임해줘야하는 불편이 생김
     - 이를 조금 더 편하게 해주는 것이 java.lang.reflect 안의 클래스들이다.
     - 자바의 코드자체를 추상화해서 접근하도록 만든 것.
     - 자바의 모든 클래스는 그 클래스 자체의 구성정보를 담은 class 타입의 오브젝트를 하나씩 가지고 있다. ( 클래스이름.class, 오브젝트의 getClass() 메소드 호출)
     
      2-3-1. 사용 예)
        java.lang.reflect.Method lengthMethod = String.class.getMethod("length")
        Method 는 interface
        
        //특정 object에 대한 메소드를 실행
        int length = lengthMethod.invoke(name); // int length = name.length();
        
     2-3-2. 스프링의 빈 
       - 내부적으로 리플렉션 API(ex. newInstance())를 이용해서 빈 정의에 나오는 클래스정보를 가지고 디폴트 생성자를 통해 빈 오브젝트를 생성한다.
       - 리플렉션은 private로 선언된 생성자도 빈으로 등록하면 오브젝트를 만들어준다. 
         이는, 리플렉션이 private 접근규약을 위반할 수 있는 강력한 기능이 있기 때문이다.
          하지만 되도록이면 이러한 private 로 된 생성자를 DI하지 않길 바람.
        
  2-4. FatoryBean
   - dynamic proxy, TransactionHandler 를 스프링 di 할 방법이 없음.
   - 스프링은 클래스 정보를 가지고 디폴트 생성자를 통해 오브젝트를 만드는 방법 외에도 빈을 만들수 있는 방법이 있음.
   - 스프링을 대신해서 오브젝트의 생성로직을 담당하도록 만들어진 특별한 빈.
   - FactoryBean 인터페이스를 구현하고 이를 스프링 di로 등록하면 Factory Bean으로 동작.
  
  
   
     
     