<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	
	<bean id="userDao" class="springbook.user.dao.UserDaoImpl">
		<property name="jdbcTemplate" ref="dataSource" />
	</bean>
	
	<!-- 타켓 -->
	<bean id="userServiceImpl" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
	</bean>
	
	<!-- global transaction 추상화  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- DataSource 설정 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl"></property>
		<property name="username" value="tobi" />
		<property name="password" value="spring" />
	</bean>

	
	<!-- Spring이 제공하는 Advice 설정 -->
	<bean id="transactionAdvice" class="springbook.user.service.TransactionAdvice">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	
	<!-- Spring이 제공하는 ProxyFactoryBean Pointcut 설정 -->
	<bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="upgrade*" />
	</bean>
		
	<!-- Spring이 제공하는 ProxyFactoryBean Advisor 설정 -->
	<bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="transactionAdvice" />
		<property name="pointcut" ref="transactionPointcut" />
	</bean>
	
	<!-- Spring이 제공하는 ProxyFactoryBean 등록 -->
	<bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="userServiceImpl" />
		<!-- advice와 advisor를 동시에 설정할 수 있는 프로퍼티. 리스트에 advice나 advisor의 빈 아이디를 값으로 넣어주면 된다.
		     기존의 ref attribute를 사용하는 DI와는 방식이 다름을 주의한다.
		 -->
		<property name="interceptorNames">
		 	<list>
		 		<value>transactionAdvisor</value>
		 	</list>
		</property>
	</bean>
     
     		
</beans>