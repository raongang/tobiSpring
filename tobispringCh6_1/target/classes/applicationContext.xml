<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	
	<bean id="userDao" class="springbook.user.dao.UserDaoImpl">
		<property name="jdbcTemplate" ref="dataSource" />
	</bean>
	
	<!-- global transaction 추상화  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- DataSource 설정 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl"></property>
		<property name="username" value="tobi" />
		<property name="password" value="spring" />
	</bean>

	<bean id="userService" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao" />
	</bean>
	
	<!-- 자동 프록시 생성기 등록  - 등록된 bean중에 Advisor 인터페이스를 구현한 모든 것을 검색. 
	     즉, bean id="transactionAdvisor" 를 찾아온다.
	-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	
	<!-- Spring이 제공하는 Advisor 설정 -->
	<bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="transactionAdvice" />
		<property name="pointcut" ref="transactionPointcut" />
	</bean>
		
	<!-- Spring이 제공하는 Advice 설정 -->
	<bean id="transactionAdvice" class="springbook.user.service.TransactionAdvice">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	
	<!-- 자동 프록시 포인트컷 설정 -->
	<bean id="transactionPointcut" class="springbook.user.service.NameMatchClassMethodPointcut">
		<property name="mappedClassName" value="*ServiceImpl" /><!-- 클래스 이름 패턴(※ 대소문자 구분) -->
		<property name="mappedName" value="upgrade*" /> <!-- 메소드 이름 패턴 -->
	</bean>
     
    <!-- 자동프록시 테스트 빈 등록 
		스태틱멤버클래스는 $로 지정한다.
		parent : 프로퍼티 정의를 포함해서 userService빈의 설정을 상속받는다.    	
    -->
    <bean id="testUserService" class="springbook.user.test.UserServiceTest$TestUserServiceImpl" parent="userService" />
    
     		
</beans>