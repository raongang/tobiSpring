1. AOP의 용어

1-1.target
 - 부가기능을 부여할 대상.
 - 핵심기능일수도 있고 다른 부가기능을 담은 proxy object일수도 있음.
 
1-2.advice
   - target에게 제공할 부가기능을 담은 모듈
   - MethodInterceptor 처럼 메소드 호출 과정에 전반적으로 참여하는 것도 있지만,예외가 발생했을떄 동작하는 advice처럼 메소드 호출 과정의 일부에서만 동작하는 advice도 있음

 1-3.join point 
  - advice가 적용될 위치.
  - spring porxy aop에서 join point는 메소드 실행단계뿐.
  - target object가 구현한 interface의 모든 메소드는 join point가 됨.
 
1-4.point cut
  - advice를 적용할  join point를 선별하는 작업 또는 그 기능을 정의한 모듈.
  - spring의 join point는 메소드 실행단계일뿐이므로, spring의 pointcut은 메소드를 선정하는 기능.
  
1-5.proxy
 - proxy는 client와 target사이에 투명하는 존재함녀서 부가기능을 제공하는 object
 - DI를 통해 target대신 client에 주입되며, client의 메소드 호출을 대신 받아서 target에 위임해주면서, 그 과정에서 부가기능을 부여한다.
 - spring은 proxy를 이용한 aop를 지원
 
1-6.advisor
 - pointcut과 advice를 하나씩 갖고 있는 object이다.
 - spring은 자동프록시 생성기가 advisor를 aop작업의 정보로 활용.
 - advisor는 spring aop에서만 사용하는 특별한 용어로, 일반적인 aop에서는 사용하지 않는다.
 
1-7.apsect
 - oop 와 마찬가지로 aop의 기본모듈.
 - 한개 또는 그 이상의 pointcut과 advice의 조합으로 만들어지며, 보통 싱글톤 형태의 오브젝트로 존재.
 - spring의 advisor는 아주 단순한 aspect로 볼수 있음.
 
 
 2. aop name spcae를 사용하기 위해 포함되어야 할 조건
   - 자동 프록시 생성기
   - advice
   - point cut
   - advisor
   